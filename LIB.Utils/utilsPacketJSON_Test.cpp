#include "utilsPacket_Test.h"
#include "utilsPacket.h"
#include "utilsPacketJSON.h"

#include <iostream>
#include <vector>

namespace utils
{

void UnitTest_PacketJSON()
{
	std::cout << "\n""utils::packet::json::tPacketJSON\n";

	using tPacketJSON = packet::tPacket<packet::json::tFormatJSON, packet::json::tPayloadString>;

	UnitTest_Packet_Find<tPacketJSON>("Parse empty packet:", "{}", "{}");
	UnitTest_Packet_Find<tPacketJSON>("Parse packet 1:", "{\"prm1\":\"123\",\"prm2\":[{\"prm2_1\":\"211\",\"prm2_2\":\"221\"},{\"prm3_1\":\"311\",\"prm3_2\":\"321\"}]}", "{\"prm1\":\"123\",\"prm2\":[{\"prm2_1\":\"211\",\"prm2_2\":\"221\"},{\"prm3_1\":\"311\",\"prm3_2\":\"321\"}]}");
	UnitTest_Packet_Find<tPacketJSON>("Parse packet 2:", "werqtre4qt{\"prm1\":\"123\",\"prm2\":[{\"prm2_1\":\"211\",\"prm2_2\":\"221\"},{\"prm3_1\":\"311\",\"prm3_2\":\"321\"}]}werq werwrfdasdf", "{\"prm1\":\"123\",\"prm2\":[{\"prm2_1\":\"211\",\"prm2_2\":\"221\"},{\"prm3_1\":\"311\",\"prm3_2\":\"321\"}]}");
	UnitTest_Packet_Find<tPacketJSON>("Parse packet 3:", "werqtre4qt{\"prm1\":\"123\",\"prm2\":[{\"prm2_1\":\"211\",\"prm2_2\":\"221\"},{\"prm3_1\":\"311\",\"prm3_2\":\"321\"}]}werq \"prm3_2\":\"321\"}]}", "{\"prm1\":\"123\",\"prm2\":[{\"prm2_1\":\"211\",\"prm2_2\":\"221\"},{\"prm3_1\":\"311\",\"prm3_2\":\"321\"}]}");

	//using tPacketSimple = packet::json::example::tPacketSimple;

	//UnitTest_Packet_Find<tPacketSimple>("std::vector<std::uint8_t> Test 1",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D },
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D });

	//UnitTest_Packet_Find<tPacketSimple>("std::vector<std::uint8_t> Test 2",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00,
	//				  0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D },
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D });


	//UnitTest_Packet_Find<tPacketSimple>("std::vector<std::uint8_t> Test 3",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00,
	//				  0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D,
	//				  0x2A, 0x09, 0x00 },
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D });

	//UnitTest_Packet_Find<tPacketSimple>("std::vector<std::uint8_t> Test 4",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00,
	//				  0x2A, 0x09, 0x00 },
	//	std::vector<std::uint8_t>{});

	////UnitTest_Packet_Parse<tPacketSimple>("std::vector<std::uint8_t> Parse 1",
	////	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D },
	////	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D });

	//using tPacketMsg = packet::star::example::tPacketMsg;

	//UnitTest_Packet_Find<tPacketMsg>("tPayloadCommon Find 1",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D },
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D });

	//UnitTest_Packet_Find<tPacketMsg>("tPayloadCommon Find 2",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00,
	//				  0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D },
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D });


	//UnitTest_Packet_Find<tPacketMsg>("tPayloadCommon Find 3",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00,
	//				  0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D,
	//				  0x2A, 0x09, 0x00 },
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D });

	//UnitTest_Packet_Find<tPacketMsg>("tPayloadCommon Find 4",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00,
	//				  0x2A, 0x09, 0x00 },
	//	std::vector<std::uint8_t>{});

	//UnitTest_Packet_Parse<tPacketMsg>("tPacketCmd Parse: MakeSomeMessage_01",
	//	std::vector<std::uint8_t>{ 0x2A, 0x09, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0xB0, 0x8D },
	//	tPacketMsg::MakeSomeMessage_01({ 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09 }));

	//UnitTest_Packet_Make("tPayloadCommon Make: MakeSomeMessage_01",
	//	tPacketMsg::MakeSomeMessage_01({ 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09 }));

	std::cout << std::endl;
}

}